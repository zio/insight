name: CI

env:
  JDK_JAVA_OPTIONS: -XX:+PrintCommandLineFlags # JDK_JAVA_OPTIONS is _the_ env. variable to use for modern Java
  JVM_OPTS: -XX:+PrintCommandLineFlags # for Java 8 only (sadly, it is not modern enough for JDK_JAVA_OPTIONS)

on:
  pull_request:
  push:
    branches:
      - "main"
    tags:
      - "**"

jobs:
  lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Lint code
        run: ./millw -i __.checkFormat

  mdoc:
    runs-on: ubuntu-20.04
    timeout-minutes: 60
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Check Document Compilation
        run: ./millw -i __.mdoc

  test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        java: ["adopt@1.8", "adopt@1.11"]
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
        with:
          java-version: ${{ matrix.java }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Run tests
        run: ./millw -i __.test

  ci:
    runs-on: ubuntu-20.04
    needs: [lint, mdoc, test]
    steps:
      - name: Aggregate of lint, and all tests
        run: echo "ci passed"

  publish-site:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: [ci]
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - run: |
          ./millw -i -j 0 __.docusaurusBuild
      - name: Release to GitHub Pages
        # publish the site whenever a tag has been pushed, for site only release
        # we will use tags of the form 'docs.yyyyMMdd'
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: JamesIves/github-pages-deploy-action@v4.3.3
        with:
          branch: gh-pages
          folder: ./out/zio/site/docusaurusBuild/dest/build/

  publish-version:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: [ci]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Setup GPG secrets
        run: |
          gpg --version
          cat <(echo "${{ secrets.PGP_SECRET }}") | base64 -d | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - name: Checkout current branch
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v13
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6
      - name: Release artifacts
        run: ./millw -i mill.scalalib.PublishModule/publishAll --sonatypeCreds "${{ secrets.SONATYPE_USERNAME}}:${{ secrets.SONATYPE_PASSWORD }}" --gpgArgs "--passphrase=${{ secrets.PGP_PASSPHRASE}},--batch,--yes,-a,-b,--pinentry-mode,loopback" --publishArtifacts blended[${{ matrix.scala-version }}].__.publishArtifacts --readTimeout 600000 --release true --signed true
